version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: roguelike_dev
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - roguelike_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - roguelike_network
    command: redis-server --appendonly yes

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: development
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: "postgresql://dev:dev123@postgres:5432/roguelike_dev?schema=public"
      REDIS_URL: "redis://redis:6379"
      JWT_SECRET: "your-super-secret-jwt-key-for-development"
      JWT_ACCESS_EXPIRY: "15m"
      JWT_REFRESH_EXPIRY: "7d"
      BCRYPT_ROUNDS: 12
      CORS_ORIGIN: "http://localhost:3000"
    ports:
      - "3001:3001"
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - roguelike_network
    command: node src/simple-server.js

  # Frontend Client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: development
    restart: unless-stopped
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - roguelike_network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  roguelike_network:
    driver: bridge